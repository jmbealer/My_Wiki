:PROPERTIES:
:ID:       6a288090-3352-4b6a-89c8-b6b81b3b8766
:END:
#+title: cli-commands
#+date: [2022-05-16 Mon 15:56]
- $ # (root) is called a shell prompt, It appears when the terminal is ready to
  accept a command.
- Filesystem organized a computer's files and directories into a tree structure
  - / root directory is the parent of all other directories and files in the
    filesystem.
  - each parent directory can contain more child directories and files.
- folders and directories are sames
- Files and directories on your computer are organized into a filesystem.
- pwd output the name of the current working directory.
- ls list all files and directories in the working directory.
- cd switches you into the directories you specify.
- mkdir create a new directory in the working directory.
- touch create a new file inside the working directory.
- cd ../.. move two levels up
- man [OPTIONS] [[section] page ...] ...
  - Format and display manual pages.
  - An interface to the system reference manuals.
  - man [command] - display the man page for a command
  - man [command.7] - display the man page for a command from section 7
  - man --path  - display the path searched for manpages
  - man -w [command] display the location of a manpage rather than the manpage
      itself
  - man -k "search string" search for manpages containing a search string
- cht.sh [OPTIONS|QUERY] - show example usage of a command
- hier learn unix/linux file system hierarchy
- pwd [options]...
  - Print name of current/working directory.
  - Print the full filename of the current working directory.
  - pwd -P --physical
    - avoid all symlinks
- ls [OPTIONS]... [FILE]...
  - List directory contents
  - List information about the FILEs (the current directory by default)
    - Sort entries alphabetically if none of -cftuvSUX nor --sort is secified.
  - ls -l
  - ls -a
  - ls -la
  - ls -lh
  - ls -lS
  - ls -ltr
- cd [-L|-P] [directory]
  - change the working directory
  - cd
    - Go the home directory of current user.
  - cd ..
    - Go up to the parent of the current directory.
  - cd -
    - Go to the previously chosen directory.
- mkdir [OPTION]... DIRECTORY...
  - make directories
  - create the DIRECTORY(ies), if they do not already exist.
  - Mandatory arguments to long options are mandatory for short options too.
  - mkdir -p, --parents
    - no error if existing, make parent directories as needed
    - Create directory recursively (useful for creating nested dirs)
- echo [short-option]... [string]...
  - display a line of text
  - Echo the STRING(s) to standard output.
- cat [OPTION]... [FILE]...
  - concatenate files and print on the standard ouput
  - concatenate FILE(s) to standard output.
  - With no FILE, or when FILE is -, read standard input.
- cp [OPTION]... SOURCE... DIRECTORY or [-T]... SOURCE... DIRECTORY or -t
    DIRECTORY SOURCE...
  - Copy files and directories.
  - Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY.
- mv [OPTION]... SOURCE... DIRECTORY or [-T]... SOURCE... DIRECTORY or -t
    DIRECTORY SOURCE...
  - move (rename) files
  - Rename SOURCE to DEST, or move SOURCE(s) to DIRECTORY.
  - Mandatory arguments to long options are mandatory for short option too.
- rm [OPTION]... [FILE]...
  - remove files or directories
- head [OPTION]... [FILE]...
  - Output the first part of files. (10 lines)
  - Print the first 10 lines of each FILE to standard output.
  - With more the one file, precede each with a header giving the file name.
  - With no FILE, or when FILE is -, read standard input.
  - Mandatory arguments to long options are mandatory for short options too.
- tail [OPTION]... [FILE]...
  - Output the last part of files. (10 lines)
  - Print the last 10 lines of each FILE to standard output.
  - With more the one file, precede each with a header giving the file name.
  - With no FILE, or when FILE is -, read standard input.
  - Mandatory arguments to long options are mandatory for short options too.
- less [OPTION]... [FILE]...
  - opposite of more
  - similar to more, but allows backwards movement in the file as well as
      forward movement.
  - does not have to read the entire input file before starting
  - so with large input files it starts up faster than text editors like vi
- more [OPTION]... [FILE]...
  - file perusal filter for crt viewing
  - is a filter for paging through text one screenful at a time.
- sort [OPTION]... [FILE]... or sort [OPTION]... --files0-from=F
  - sort lines of text files
  - write sored concatenation of all file(s) to standard output.
  - With no FILE, or when FILE is -, read standard input.
  - Mandatory arguments to long options are mandatory for short options too. 
- grep [OPTION...] PATTERNS [FILE...] egrep, fgrep
  - print lines that match patterns
  - searches for PATTERNS in each FILE.
  - PATTERNS is one or more patterns separated by newline characters, and grep
      print eac line that matches a pattern.
  - Typically PATTERNS should be quoted when grep is used in a shell command.
  - A FILE of “-” stands for standard input.
  - If no FILE is given, recursive searches examine the working directory, and
      nonrecursive search read standard input.
  - The variant programs egrep and fgrep are the same as grep -E and grep -F,
      respectively.
  - These variants are deprecated, but are provided for backward compatibility.
  - grep [OPTION...] -e PATTERNS ... [FILE...]
  - grep [OPTION...] -f PATTERN_FILE ... [FILE...]
- which
- which [options] [--] programname [...]
  - shows the full path of (shell) commands.
  - Locate a program in the user's path.
  - Search the PATH environment variable and display the location of any
      matching executables
- chmod [OPTION]... MODE[,MODE]... FILE...
  - change file mode bits
  - chmod [OPTION]... OCTAL-MODE FILE...
  - chmod [OPTION]... --reference=RFILE FILE...
- history
- clear [-Ttype] [-V] [-x]
  - clear the terminal screen

## File System

- cat
- chmod
- chown
- chgrp
- cksum
- cmp
- cp
- dd
- du
- df
- file
- fuser
- ln
- ls
- mkdir
- mv
- pax
- pwd
- rm
- rmdir
- split
- tee
- touch
- type
- umask

## Processes

- at
- bg
- crontab
- fg
- kill
- nice
- ps
- time

## User Environment

- env
- exit
- logname
- mesg
- talk
- tput
- uname
- who
- write

## Text Processing

- awk
- basename
- comm
- csplit
- cut
- diff
- dirname
- ed
- ex
- fold
- head
- iconv
- join
- m4
- more
- nl
- paste
- patch
- printf
- sed
- sort
- strings
- tail
- tr
- uniq
- vi
- wc
- xargs

## Shell Builtins

- alias
- cd
- echo
- test
- unset
- wait

## Searching

- find
- grep

## Documentation

- man

## Software Development

- ar
- ctags
- lex
- make
- nm
- strip
- yacc

## Miscellaneous

- bc
- cal
- expr
- lp
- od
- sleep
- true and false
    

man - read a manual page
apropos - find what man page is appropriate
pwd - print working directory
cd - change directory
echo - print some arguments
ls - list directory
find - find files
mkdir - make directory
cd - change directory
rmdir -remove directory
pushd - push directory
popd - pop directory
cp - copy a file or directory
mv - move or rename a file or directory
hostname - my computer’s network name
less - page through
more - page through (alternate)
history - see previous commands from this shell
head - print the start
tail - print the end
mkdir - make directory
rmdir - remove directory
grep - find things inside files
cat - print the whole file
man - read a manual page for a program
env - look at your environment
export - export/set a new environment variable
which - see path to a program
exit - exit the shell
sudo - become the super user, root (DANGER - only use when necessary)
chmod - change permission modifiers
chown -  change ownership
